[{"/Users/ravehunter05/Desktop/proyecto_finanzas/src/index.js":"1","/Users/ravehunter05/Desktop/proyecto_finanzas/src/reportWebVitals.js":"2","/Users/ravehunter05/Desktop/proyecto_finanzas/src/App.js":"3","/Users/ravehunter05/Desktop/proyecto_finanzas/src/presentation/Presentation.js":"4","/Users/ravehunter05/Desktop/proyecto_finanzas/src/selection/Selection.js":"5","/Users/ravehunter05/Desktop/proyecto_finanzas/src/estado_resultados/EstadoResultados.js":"6","/Users/ravehunter05/Desktop/proyecto_finanzas/src/razones/Razones.js":"7"},{"size":500,"mtime":1606362084984,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606362084985,"results":"10","hashOfConfig":"9"},{"size":986,"mtime":1606409708798,"results":"11","hashOfConfig":"9"},{"size":621,"mtime":1606408883042,"results":"12","hashOfConfig":"9"},{"size":950,"mtime":1606409784217,"results":"13","hashOfConfig":"9"},{"size":12111,"mtime":1606408258918,"results":"14","hashOfConfig":"9"},{"size":1114,"mtime":1606410332780,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"vb2vpa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ravehunter05/Desktop/proyecto_finanzas/src/index.js",[],["33","34"],"/Users/ravehunter05/Desktop/proyecto_finanzas/src/reportWebVitals.js",[],["35","36"],"/Users/ravehunter05/Desktop/proyecto_finanzas/src/App.js",["37"],"/Users/ravehunter05/Desktop/proyecto_finanzas/src/presentation/Presentation.js",[],"/Users/ravehunter05/Desktop/proyecto_finanzas/src/selection/Selection.js",[],"/Users/ravehunter05/Desktop/proyecto_finanzas/src/estado_resultados/EstadoResultados.js",["38","39","40","41","42","43"],"import React, {useState, useEffect} from 'react'\nimport { Button } from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\n\n\nfunction EstadoResultados() {\n    \n      async function handleSubmit(e){\n        e.preventDefault()\n        // await funcionGeneradora()\n        setVer(1)\n    }\n\n    function funcionGeneradora(){\n        setMercaderiaDisponible(invInicial+ compras)\n        setCostoVenta(mercaderiaDisponible-invFinal)\n        setUtilidadBruta(ventas-costoVenta)\n        setGastosOperacion(gastosVenta+gastosAdministrativos)\n        setUtilidadOperacion(utilidadBruta-gastosOperacion)\n        setGastosNoOperacionales(gastosFinancieros)\n        setUAI(utilidadOperacion-gastosNoOperacionales)\n        setutilidadEjercicio(UAI-(UAI*30/100))\n\n        // const mercaderiaDisponible = ventas- invInicial -compras\n        // const costoVenta = mercaderiaDisponible - invFinal\n        // const utilidadBruta = ventas-costoVenta\n        // const gastosOperacion = gastosVenta-gastosAdministrativos\n        // const utilidadOperacion = utilidadBruta - gastosOperacion\n        // const gastosNoOperacionales = gastosFinancieros\n        // const UAI = utilidadOperacion - gastosNoOperacionales\n        // const utilidadBurta = UAI - (UAI * 30/100)\n        \n\n        // return ([mercaderiaDisponible, costoVenta, utilidadBruta, gastosOperacion, utilidadOperacion, gastosNoOperacionales, UAI, utilidadEjercicio])\n    }\n\n    async function fMercaderiaDisponible(){\n        let resultado = await  ventas-invInicial-compras\n        await setMercaderiaDisponible(resultado)\n        return resultado\n    }\n\n    //Datos a pedir\n    const [ventas, setVentas] = useState()\n    const [compras, setCompras] = useState()\n    const [invInicial, setInvInicial] = useState()\n    const [invFinal, setInvFinal] = useState()\n    const [gastosVenta, setGastosVenta] = useState()\n    const [gastosAdministrativos, setGastosAdministrativos] = useState()\n    const [gastosFinancieros, setGastosFinancieros] = useState()\n    const [ver, setVer] = useState(0)\n\n    // Datos a generar\n\n    const [mercaderiaDisponible, setMercaderiaDisponible] = useState()\n    const [costoVenta, setCostoVenta] = useState()\n    const [gastosOperacion, setGastosOperacion] = useState()\n    const [utilidadBruta, setUtilidadBruta] = useState()\n    const [utilidadOperacion, setUtilidadOperacion] = useState()\n    const [gastosNoOperacionales, setGastosNoOperacionales] = useState()\n    const [UAI, setUAI] = useState()\n    const [utilidadEjercicio, setutilidadEjercicio] = useState()\n\n    // Handles para datos a pedir\n\n    function handleVentas(e){\n        setVentas(e.target.value)\n    }\n\n    function handleCompras(e){\n        setCompras(e.target.value)\n    }\n\n    function handleInvInicial(e){\n        setInvInicial(e.target.value)\n    }\n\n    function handleInvFinal(e){\n        setInvFinal(e.target.value)\n    }\n\n    function handleGastosVenta(e){\n        setGastosVenta(e.target.value)\n    }\n\n    function handleGastosAdministrativos(e){\n        setGastosAdministrativos(e.target.value)\n    }\n\n    function handleGastosFinancieros(e){\n        setGastosFinancieros(e.target.value)\n    }\n\n    //useEffect\n\n    useEffect(() => {\n        setMercaderiaDisponible(0)\n        setMercaderiaDisponible(parseFloat(invInicial)+ parseFloat(compras))\n        setCostoVenta(0)\n        setCostoVenta(parseFloat(mercaderiaDisponible)-parseFloat(invFinal))\n        setUtilidadBruta(0)\n        setUtilidadBruta(parseFloat(ventas)-parseFloat(costoVenta))\n        setGastosOperacion(parseFloat(gastosVenta)+parseFloat(gastosAdministrativos))\n        setUtilidadOperacion(0)\n        setUtilidadOperacion(parseFloat(utilidadBruta)-parseFloat(gastosOperacion))\n        setGastosNoOperacionales(parseFloat(gastosFinancieros))\n        setUAI(0)\n        setUAI(parseFloat(utilidadOperacion)-parseFloat(gastosNoOperacionales))\n        setutilidadEjercicio(0)\n        setutilidadEjercicio(UAI-(UAI*30/100))\n        setVer(0)\n    }, [invInicial, mercaderiaDisponible, ventas, gastosVenta, utilidadBruta, gastosFinancieros, utilidadOperacion, UAI])\n    \n    \n    return (\n        <div >\n            <h2>Ingrese las cuentas para el estado de resultados</h2>\n            <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\n                <label>\n                    Ventas\n                    <input \n                    type=\"number\" \n                    name=\"ventas\" \n                    className=\"form-control\"\n                    id=\"ventas\"\n                    onChange={handleVentas}\n                    value={ventas}\n                    required\n                    />\n                </label>\n                <label>\n                    Compras\n                    <input \n                    type=\"number\" \n                    name=\"compras\"\n                    className=\"form-control\" \n                    id=\"compras\"\n                    onChange={handleCompras}\n                    value={compras}\n                    required\n                    />\n                </label>\n                <label>\n                    Inventario Inicial\n                    <input \n                    type=\"number\" \n                    name=\"invInicial\" \n                    className=\"form-control\"\n                    id=\"inv-inicial\"\n                    onChange={handleInvInicial}\n                    value={invInicial}\n                    required\n                    />\n                </label>\n                <label>\n                    Inventario Final\n                    <input \n                    type=\"number\" \n                    name=\"invFinal\" \n                    className=\"form-control\"\n                    id=\"inv-final\"\n                    onChange={handleInvFinal}\n                    value={invFinal}\n                    required\n                    />\n                </label>\n                <label>\n                    Gastos de venta\n                    <input \n                    type=\"number\" \n                    name=\"gastosVenta\" \n                    className=\"form-control\"\n                    id=\"gastos-venta\"\n                    onChange={handleGastosVenta}\n                    value={gastosVenta}\n                    required\n                    />\n                </label>\n                <label>\n                    Gastos administrativos\n                    <input \n                    type=\"number\" \n                    name=\"gastosAdministrativos\" \n                    className=\"form-control\"\n                    id=\"gastos-administrativos\"\n                    onChange={handleGastosAdministrativos}\n                    value={gastosAdministrativos}\n                    required\n                    />\n                </label>\n                <label>\n                    Gastos financieros\n                    <input \n                    type=\"number\" \n                    name=\"gastos-financieros\" \n                    className=\"form-control\"\n                    id=\"gastos-financieros\"\n                    onChange={handleGastosFinancieros}\n                    value={gastosFinancieros}\n                    required\n                    />\n                </label>\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Generar\"/>\n\n                {\n                !isNaN(utilidadEjercicio) && !isNaN(ventas) && \n                !isNaN(costoVenta) && !isNaN(utilidadBruta) && \n                !isNaN(mercaderiaDisponible) && !isNaN(gastosOperacion) &&\n                !isNaN(utilidadOperacion) && !isNaN(gastosNoOperacionales) &&\n                !isNaN(UAI) && !isNaN(utilidadEjercicio)  && ver == 1 &&\n\n                <div className=\"text-center mt-5 mb-5 d-flex flex-column align-content-center\">\n                    <h2>\n                        Compañía el Buen Camino, S.A <br/>\n                        Estado de Resultados <br/>\n                        Del 01 al 31 de Diciembre del 2016\n                    </h2>\n\n                    <table className=\"table mt-5\">\n                        <tr>\n                            <td>\n                                <strong>Ventas</strong>\n                            </td>\n                            <td></td>\n                            <td>{ventas}</td>\n                        </tr>\n                        <tr>\n                            <td>Inventario inicial</td>\n                            <td>{invInicial}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Compras</td>\n                            <td>{compras}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Mercadería disponible</td>\n                            <td>{mercaderiaDisponible}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Menos: Inventario final</td>\n                            <td>{invFinal}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Menos: Costo de venta</strong>\n                            </td>\n                            <td></td>\n                            <td>{costoVenta}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Utilidad Bruta</strong>\n                            </td>\n                            <td></td>\n                            <td>{utilidadBruta}</td>\n                        </tr>\n                        <tr>\n                            <td>Gastos de venta</td>\n                            <td>{gastosVenta}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Gastos de administración</td>\n                            <td>{gastosAdministrativos}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Menos: Gastos de operación</strong>\n                            </td>\n                            <td></td>\n                            <td>{gastosOperacion}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Utilidad de operación</strong>\n                            </td>\n                            <td></td>\n                            <td>{utilidadOperacion}</td>\n                        </tr>\n                        <tr>\n                            <td>Gastos financieros</td>\n                            <td>{gastosFinancieros}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Gastos no operacionales</strong>\n                            </td>\n                            <td></td>\n                            <td>{gastosNoOperacionales}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Utilidad antes de impuestos</strong>\n                            </td>\n                            <td></td>\n                            <td>{UAI}</td>\n                        </tr>\n                        <tr>\n                            <td>Impuestos sobre la renta</td>\n                            <td></td>\n                            <td>{(UAI*30/100).toFixed(2)}</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <strong>Utilidad del ejercicio</strong>\n                            </td>\n                            <td></td>\n                            <td>{utilidadEjercicio.toFixed(2)}</td>\n                        </tr>\n\n                    </table>\n\n                </div>\n                }\n            </form>\n        </div>\n    )\n}\n\nexport default EstadoResultados\n","/Users/ravehunter05/Desktop/proyecto_finanzas/src/razones/Razones.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},{"ruleId":"50","severity":1,"message":"55","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":12},{"ruleId":"50","severity":1,"message":"56","line":14,"column":14,"nodeType":"52","messageId":"53","endLine":14,"endColumn":31},{"ruleId":"50","severity":1,"message":"57","line":37,"column":20,"nodeType":"52","messageId":"53","endLine":37,"endColumn":41},{"ruleId":"58","severity":1,"message":"59","line":112,"column":8,"nodeType":"60","endLine":112,"endColumn":121,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":210,"column":66,"nodeType":"64","messageId":"65","endLine":210,"endColumn":68},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'funcionGeneradora' is defined but never used.","'fMercaderiaDisponible' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'compras', 'costoVenta', 'gastosAdministrativos', 'gastosNoOperacionales', 'gastosOperacion', and 'invFinal'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMercaderiaDisponible' needs the current value of 'compras'.","ArrayExpression",["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [invInicial, mercaderiaDisponible, ventas, gastosVenta, utilidadBruta, gastosFinancieros, utilidadOperacion, UAI, compras, invFinal, costoVenta, gastosAdministrativos, gastosOperacion, gastosNoOperacionales]",{"range":"71","text":"72"},[3971,4084],"[invInicial, mercaderiaDisponible, ventas, gastosVenta, utilidadBruta, gastosFinancieros, utilidadOperacion, UAI, compras, invFinal, costoVenta, gastosAdministrativos, gastosOperacion, gastosNoOperacionales]"]